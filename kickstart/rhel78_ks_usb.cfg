# Script Code By OST(Open Source Technology Co.)
# Edited by rockplace
# 2017.05.04 Edited by anjae83
# 2017.09.26 Edited by anjae83 (USB installation)
# 2017.10.25 Edited by anjae83 (USB recognition)
# 2018.05.28 Edited by anjae83 (7.3)
# 2018.06.01 Edited by anjae83 (7.4)
# 2020.06.05 Edited by ashurei (7.8)

install
text
#harddrive --partition=sdb1 --dir=/
#key --skip
lang en_US.UTF-8
keyboard us
network --device link --bootproto dhcp --onboot off --noipv6 --hostname Cloud-custom
rootpw imsi00
#firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512
timezone Asia/Seoul
poweroff
%include /tmp/part-include

%pre --log=/tmp/ks-pre.log
#!/bin/bash
### for define rootdrive (sda)
DIR="/sys/block"
MINSIZE=200
ROOTDRIVE=""
for DEV in sda sdb sdc sdd sde
do
	if [ -d $DIR/$DEV ]; then
		REMOVABLE=$(cat $DIR/$DEV/removable)
		# REMOVABLE=0 : $DEV is disk
		if (( REMOVABLE == 0 )); then
			SIZE=$(cat $DIR/$DEV/size)
			GB=$((SIZE/2**21))
			if [ $GB -gt $MINSIZE ] && [ -z "$ROOTDRIVE" ]; then
				ROOTDRIVE=$DEV
			fi
		fi
	fi
done

### partition
BOOTSIZE=1024
ROOTSIZE=40960
VARSIZE=10240
TMPSIZE=10240
HOMESIZE=10240
#CRASHSIZE=81920
GatherSizing () {
	MEMINFO=$(grep MemTotal /proc/meminfo | awk '{print $2}')
	MEMSIZE=$((MEMINFO / 1024))

	# /var/crash
	#if [ $MEMSIZE -ge 91000 ]; then
	# CRASHSIZE = 81920
	#else
	# CRASHSIZE=$(echo "$MEMSIZE 1.1" | awk '{printf "%.f", $1 * $2}')
	#fi

	# swap
	SWAP=$((MEMINFO * 2 / 1024))
	SWAP16="16384"
	SWAP32="32768"
	if [ $MEMSIZE -le 2048 ]; then
		SWAPSIZE=$SWAP
	elif [ $MEMSIZE -ge 63000 ]; then
		SWAPSIZE=$SWAP32
	else
		SWAPSIZE=$SWAP16
	fi
}

Clearing () {
	{
	echo "zerombr"
	echo "ignoredisk --only-use $ROOTDRIVE"
	echo "clearpart --initlabel --all"
	} >> /tmp/part-include
}
PartitioningEfiBoot () {
	{
	echo "bootloader --location partition --driveorder $ROOTDRIVE"
	echo "part /boot --fstype ext4 --size $BOOTSIZE --asprimary"
	echo "part /boot/efi --fstype vfat --size 256 --asprimary"
	echo "part swap --fstype swap --size $SWAPSIZE"
	} >> /tmp/part-include
}
PartitioningLegacyBoot () {
	{
	echo "bootloader --location mbr --driveorder $ROOTDRIVE"
	echo "part /boot --fstype ext4 --size $BOOTSIZE --asprimary"
	echo "part swap --fstype swap --size $SWAPSIZE --asprimary"
	} >> /tmp/part-include
}
PartitioningCommon () {
	{
	echo "part / --fstype ext4 --size $ROOTSIZE --asprimary"
	echo "part /var --fstype ext4 --size $VARSIZE"
	echo "part /home --fstype ext4 --size $HOMESIZE"
	# echo "part /var/crash --fstype ext4 --size $CRASHSIZE"
	echo "part /tmp --fstype ext4 --size $TMPSIZE"
	echo "part pv.253005 --grow --size=200"
	} >> /tmp/part-include
}

### Create file system
if [ -d /sys/firmware/efi ]; then
	GatherSizing
	Clearing
	PartitioningEfiBoot
	PartitioningCommon
else
	GatherSizing
	Clearing
	PartitioningLegacyBoot
	PartitioningCommon
fi
%end

%packages --nobase
#@korean-support
#@server-policy
%end

%post --log=/tmp/ks-post.log
MEDIA="/mnt/source"
if [ ! -d "${MEDIA}" ]; then
	mkdir "${MEDIA}"
fi

mount LABEL=RHEL78 ${MEDIA}
echo "[RHEL]" >> /etc/yum.repos.d/rhel.repo
echo "name=rhel7" >> /etc/yum.repos.d/rhel.repo
echo "baseurl=file:///mnt/source" >> /etc/yum.repos.d/rhel.repo
echo "gpgcheck=0" >> /etc/yum.repos.d/rhel.repo

yum install -y lvm2 openssl-devel krb5-devel zlib-devel perl bzip ethtool man-pages man-pages-overrides ntp ntpdate openssh-clients sos sysstat unzip vim-enhanced zip nfs-utils rpcbind xinetd tcp_wrappers ksh
rm -f /etc/yum.repos.d/rhel.repo

mkdir -p /root/custom
cp -a ${MEDIA}/custom/postInstallation.sh /root/custom
cp -a ${MEDIA}/custom/osinstallcheck.sh /root/custom
#cp -a ${MEDIA}/custom/*.rpm /root/custom

chmod 700 /root/custom/postInstallation.sh
chmod 700 /root/custom/osinstallcheck.sh
sh /root/custom/postInstallation.sh
#sed -i '/^%pre/,/^%end/d;/^%post/,/^%end/d' /root/anaconda-ks.cfg
#rm -rf /root/custom
exit
%end
