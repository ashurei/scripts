# Script Code By OST(Open Source Technology Co.)
# Edited by rockplace
# 2017.05.04 Edited by anjae83
# 2017.09.26 Edited by anjae83
# 2018.03.23 Edited by anjae83
# 2018.04.02 Edited by anjae83
# 2018.04.14 Edited by anjae83

install
text
cdrom
#key --skip
lang en_US.UTF-8
keyboard us
network --device link --bootproto dhcp --onboot off --noipv6 --hostname Cloud-custom
rootpw imsi00
firewall --disabled
selinux --disabled
authconfig --enableshadow --passalgo=sha512
timezone Asia/Seoul
poweroff
%include /tmp/part-include

%pre --log=/tmp/ks-pre.log
#!/bin/sh
BOOTSIZE=500
ROOTSIZE=40960
VARSIZE=10240
TMPSIZE=10240
HOMESIZE=10240
GatherSizing() {
    MEMINFO=$(cat /proc/meminfo | grep MemTotal | awk -F " " '{print $2}')
    MEMSIZE=$(($MEMINFO / 1024))

    # /var/crash
    if [ $MEMSIZE -ge 91000 ]; then
        CRASHSIZE=81920
    else
        CRASHSIZE=$(echo "$MEMSIZE 1.1" | awk '{printf "%.f", $1 * $2}')
    fi

    # swap
    SWAPSIZE1=$(($MEMINFO / 1024 * 2))
    SWAPSIZE2=$(echo "16384")
    SWAPSIZE3=$(echo "32768")
    if [ $MEMSIZE -le 2048 ]; then
        SWAPSIZE=$SWAPSIZE1
    elif [ $MEMSIZE -ge 63000 ]; then
        SWAPSIZE=$SWAPSIZE3
    else
        SWAPSIZE=$SWAPSIZE2
    fi
}
Clearing () {
    echo "zerombr" >> /tmp/part-include
    echo "ignoredisk --only-use sda" >> /tmp/part-include
    echo "clearpart --initlabel --all" >> /tmp/part-include
}
PartitioningEfiBoot () {
    echo "bootloader --location partition --driveorder sda" >> /tmp/part-include
    echo "part /boot --fstype ext4 --size $BOOTSIZE --asprimary" >> /tmp/part-include
    echo "part /boot/efi --fstype vfat --size 256 --asprimary" >> /tmp/part-include
    echo "part swap --fstype swap --size $SWAPSIZE" >> /tmp/part-include
}
PartitioningLegacyBoot () {
    echo "bootloader --location mbr --driveorder sda" >> /tmp/part-include
    echo "part /boot --fstype ext4 --size $BOOTSIZE --asprimary" >> /tmp/part-include
    echo "part swap --fstype swap --size $SWAPSIZE --asprimary" >> /tmp/part-include
}
PartitioningCommon () {
    echo "part / --fstype ext4 --size $ROOTSIZE --asprimary" >> /tmp/part-include
    echo "part /var --fstype ext4 --size $VARSIZE" >> /tmp/part-include
    echo "part /var/crash --fstype ext4 --size $CRASHSIZE" >> /tmp/part-include
    echo "part /tmp --fstype ext4 --size $TMPSIZE" >> /tmp/part-include
    echo "part pv.253005 --grow --size=200" >> /tmp/part-include
}
if [ -d /sys/firmware/efi ] ; then
    GatherSizing;
    Clearing;
    PartitioningEfiBoot;
    PartitioningCommon;
else
    GatherSizing;
    Clearing;
    PartitioningLegacyBoot;
    PartitioningCommon;
fi
%end

%packages --nobase
#@korean-support
#@server-policy
%end

%post
#chroot /mnt/sysimage

# Disable default yum repository
mkdir /etc/yum.repos.d/org
mv /etc/yum.repos.d/*.repo /etc/yum.repos.d/org/

if [ ! -d /mnt/source ]; then
  mkdir /mnt/source
fi

mount -o ro /dev/sr0 /mnt/source
echo "[RHEL]" >> /etc/yum.repos.d/rhel7.repo
echo "name=rhel7" >> /etc/yum.repos.d/rhel7.repo
echo "baseurl=file:///mnt/source" >> /etc/yum.repos.d/rhel7.repo
echo "gpgcheck=0" >> /etc/yum.repos.d/rhel7.repo
yum install -y lvm2 openssl-devel krb5-devel zlib-devel perl bzip ethtool man-pages man-pages-overrides ntp ntpdate openssh-clients sos sysstat unzip vim-enhanced zip nfs-utils rpcbind xinetd tcp_wrappers ksh gcc
rm -f /etc/yum.repos.d/rhel7.repo

mkdir -p /root/custom
cp -a /mnt/source/custom/postInstallation.sh /root/custom
cp -a /mnt/source/custom/*.rpm /root/custom
cp -a /mnt/source/custom/osinstallcheck.sh /root/

chmod 755 /root/custom/postInstallation.sh
chmod 755 /root/custom/osinstallcheck.sh
sh /root/custom/postInstallation.sh
rm -f /root/custom/postInstallation.sh
sed -i '/^%pre/,/^%end/d;/^%post/,/^%end/d' /root/anaconda-ks.cfg
rm -rf /root/custom
exit
exit
%end
